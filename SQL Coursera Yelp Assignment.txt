Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table =10,000
iv. Checkin table = 10,000
v. elite_years table =10,000
vi. friend table =    10,000
vii. hours table =10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table =10,000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business =10,000 records primary key :business_id
ii. Hours = 1,562 records foreign key: business_id
iii. Category =2643 records foreign key:business_id
iv. Attribute = 1,115 records foreign key:business_id
v. Review = 10,000 records primary key:id
vi. Checkin = 493 records, foreign key:business_id
vii. Photo = 10,000 records primary key:id
viii. Tip = 537 records, foreign key:user_id
ix. User = 10,000 records primary key:id
x. Friend = 11 records, foreign_key:user_id
xi. Elite_years =2,780 records foreign key:user_id

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	Zero records
	
	SQL code used to arrive at answer:
	SELECT *
FROM USER
WHERE (id IS NULL
    OR name IS NULL
    OR review_count IS NULL
    OR yelping_since IS NULL
    OR useful IS NULL
    OR funny IS NULL
    OR cool IS NULL
    OR fans  IS NULL
    OR average_stars IS NULL
    OR compliment_hot IS NULL
    OR compliment_more IS NULL
    OR compliment_profile IS NULL
    OR compliment_cute IS NULL
    OR compliment_list IS NULL
    OR compliment_note IS NULL
    OR compliment_plain IS NULL
    OR compliment_cool IS NULL
    OR compliment_funny IS NULL
    OR compliment_writer IS NULL
    OR compliment_photos) IS NULL
       ;
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:5		avg:3.70
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.00	max:5.00		avg:3.65
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53	avg:1.94
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:2000		avg:24.295
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	SELECT review_count,city
    FROM business
    ORDER BY review_count DESC;
	
	Copy and Paste the Result Below:
	--------------+------------+
| review_count | city       |
+--------------+------------+
|         3873 | Las Vegas  |
|         1757 | Montréal   |
|         1549 | Gilbert    |
|         1410 | Las Vegas  |
|         1389 | Las Vegas  |
|         1252 | Las Vegas  |
|         1116 | Las Vegas  |
|         1084 | Las Vegas  |
|          961 | Las Vegas  |
|          902 | Gilbert    |
|          864 | Las Vegas  |
|          823 | Scottsdale |
|          821 | Las Vegas  |
|          786 | Las Vegas  |
|          785 | Henderson  |
|          778 | Toronto    |
|          768 | Las Vegas  |
|          758 | Las Vegas  |
|          726 | Scottsdale |
|          723 | Cleveland  |
|          720 | Las Vegas  |
|          715 | Charlotte  |
|          711 | Phoenix    |
|          706 | Las Vegas  |
|          700 | Phoenix    |
+--------------+------------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars,count(id)
FROM business
WHERE city = "Avon"
GROUP BY stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-----------+
| stars | count(id) |
+-------+-----------+
|   1.5 |         1 |
|   2.5 |         2 |
|   3.5 |         3 |
|   4.0 |         2 |
|   4.5 |         1 |
|   5.0 |         1 |
+-------+-----------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars,count(id)
FROM business
WHERE city = "Beachwood"
GROUP BY stars;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		+-------+-----------+
| stars | count(id) |
+-------+-----------+
|   2.0 |         1 |
|   2.5 |         1 |
|   3.0 |         2 |
|   3.5 |         2 |
|   4.0 |         1 |
|   4.5 |         2 |
|   5.0 |         5 |
+-------+-----------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
		SELECT review_count,id,name
		FROM user
		ORDER  BY review_count DESC
		limit 5;
		
	Copy and Paste the Result Below:
		review_count | id                     | name    |
+--------------+------------------------+---------+
|         2000 | -G7Zkl1wIWBBmD0KRy_sCw | Gerald  |
|         1629 | -3s52C4zL_DHRK0ULG6qtg | Sara    |
|         1339 | -8lbUNlXVSoXqaRRiHiSNg | Yuri    |
|         1246 | -K2Tcgh2EKX6e6HqqIrBIQ | .Hon    |
|         1215 | -FZBTkAZEXoP7CYvRV2ZwQ | William |
+--------------+------------------------+---------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	For this question I created a new ratio which is calculated as fans/reviews.The higher the ratio the stronger the relationship.
	Rebecca has the highest ratio of fans to reviews but overall there is no determinate relationship between reviews & fans.As we go down the list the ratio falls rapidly suggesting that there is no clear relationship.
	Results
	Name    | id                     | review_count | fans | ratio |
---------+------------------------+--------------+------+-------+
| rebecca | -J06qsoD12jmjAU75sCbjA |            6 |   69 |    11 |
| Nelson  | -5mqBgsuzJC5mxA9HQvAyQ |            7 |   70 |    10 |
| Susan   | -bzsby9X3v1wPis_GZFQlg |            6 |   63 |    10 |
| Roger   | -k0itjht__-qtuRZqUeCsQ |           16 |   64 |     4 |
| Sarah   | -7PFGFM6IgaYf1vbxTcr_g |            2 |    5 |     2 |
| Mark    | --nIqAJNHk0kc2_uFJ7LMA |            1 |    1 |     1 |
| Roxana  | --UjDunOU3ZuRzYppmyHgQ |            1 |    1 |     1 |
| Brandon | -04z0d7dGfqVrAOBRbLk-A |            1 |    1 |     1 |
| Jeff    | -0os_N_PEWPlPCE3YR79ZQ |            1 |    1 |     1 |
| Renee   | -0T652FYD5u7wqcghfi7jg |            1 |    1 |     1 |
+---------+------------------------+--------------+------+-------+
	
	
	My SQL Code
	
	SELECT name,id,review_count,fans,fans/review_count as ratio
	FROM user
	ORDER by ratio DESC
	LIMIT 10;
      
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	Hate:232
    Love:1780
	
	SQL code used to arrive at answer:
	SELECT count(DISTINCT text) as Love
    FROM review
    WHERE text LIKE "%love%";
	SELECT count (DISTINCT text)as Hate
	FROM review
	WHERE text LIKE "%hate%";   
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	SELECT name,fans
	FROM User
	ORDER BY Fans DESC
	LIMIT 10;
	
	Copy and Paste the Result Below:

	 +-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
     I chose the city Mesa and the category Italian for my analysis.Yes there is a different distribution of hours.

ii. Do the two groups you chose to analyze have a different number of reviews?
         Yes.The high rating companies have a higher number of reviews as compared to lower rating business.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
       There is not a significant difference in locations. I used the average longitude & latitude value and grouped by Rating.There was not a significant difference.

SQL code used for analysis:
     SELECT business.id,city,category,avg(stars),avg(review_count),CASE
WHEN stars BETWEEN 2 AND 3 THEN "LOW-RATING"
WHEN stars BETWEEN 4 AND 5 THEN "HIGH-RATING"
ELSE "N/A"  END as Rating 
		FROM business INNER JOIN category
		ON business.id=category.business_id
	    where business.id IN
       (SELECT business.ID where city="Mesa")
       group by Rating;
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         Busines that are open & have been checked out have higher star rating (3.32) as compared to business that are not open (2.0)
         
ii. Difference 2:
         Higher checkin for open businesses rathet than closed ones.
         
         
SQL code used for analysis:
SELECT avg(review_count),avg(stars),is_open,avg(count)
	from business INNER JOIN checkin ON
	business.id=checkin.business_id
	GROUP by is_open;

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         For this analysis I chose sentiment analysis.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
      I want to see in my analysis how the mood affets the number of stars one gives to an business. From this analysis we can determine what review will give the better rating in terms of stars. The first state,AZ has the highest rating in coolness which means people form this area have a preference of something being cool and arelikely to give better reviews.
   	  This type of analyisi can help business es in each area to determine how customer mood about something(funny,cool,useful) can generate star ratings.Furthermore, this type of analysis can alsu be used at city-level.
                  
iii. Output of your finished dataset:
   State |    avg(useful) |      avg(funny) |       avg(cool) | avg(business.stars) | avg(business.stars/useful) | coalesce(avg(business.stars/funny),0) | coalesce(avg(business.stars/cool),0) |
+-------+----------------+-----------------+-----------------+---------------------+----------------------------+---------------------------------------+--------------------------------------+
| AZ    | 0.792929292929 |  0.232323232323 |   0.29797979798 |       3.78787878788 |              2.71811111111 |                         2.87688172043 |                        2.96138392857 |
| BW    |            0.0 |             0.0 |             0.0 |                 4.5 |                       None |                                     0 |                                    0 |
| EDH   |            0.6 |             0.0 |             0.4 |                 3.7 |                        1.5 |                                     0 |                                 2.25 |
| IL    |            0.5 |             0.0 |             0.0 |       3.91666666667 |              3.66666666667 |                                     0 |                                    0 |
| NC    |            1.0 | 0.0666666666667 |  0.233333333333 |                 3.4 |              2.52678571429 |                                   3.5 |                        3.41666666667 |
| NV    | 0.939393939394 |  0.341991341991 |   0.52380952381 |       3.74242424242 |              2.45104310722 |                         2.68696581197 |                        2.80263409962 |
| OH    |  1.13333333333 |  0.566666666667 |  0.533333333333 |       3.83333333333 |              2.46944444444 |                         2.95714285714 |                        2.91363636364 |
| ON    |  1.02857142857 |  0.257142857143 |  0.471428571429 |       3.56428571429 |               2.2770320197 |                         2.89166666667 |                        2.98134920635 |
| PA    | 0.518518518519 |  0.037037037037 |  0.185185185185 |       3.72222222222 |                     3.0125 |                                   4.5 |                               3.1875 |
| QC    |            0.8 |            0.15 |            0.25 |               3.975 |              3.18181818182 |                                 3.125 |                               3.1875 |
| SC    |            2.0 |             0.0 |             0.0 |                 4.5 |                       2.25 |                                     0 |                                    0 |
| WI    | 0.294117647059 | 0.0588235294118 | 0.0588235294118 |       3.79411764706 |                     3.4375 |                                   3.5 |                                  3.5 |
+-------+----------------+-----------------+-----------------+---------------------+----------------------------+---------------------------------------+--------------------------------------+
iv. Provide the SQL code you used to create your final dataset:
SELECT state,avg(useful),avg(funny),avg(cool),avg(business.stars),avg(business.stars/useful),coalesce(avg(business.stars/funny),0),coalesce(avg(business.stars/cool),0)
	FROM review
	JOIN business ON 
	review.business_id=business.id
GROUP BY state;


